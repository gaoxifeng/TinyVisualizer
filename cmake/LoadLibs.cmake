#LIBRARIES
#EIGEN3
FIND_PACKAGE(Eigen3 QUIET)
IF(EIGEN3_FOUND)
  MESSAGE(STATUS "Found EIGEN3 @ ${EIGEN3_INCLUDE_DIR}")
  INCLUDE_DIRECTORIES(${EIGEN3_INCLUDE_DIR})
ELSE(EIGEN3_FOUND)
  IF(EXISTS ${PROJECT_BINARY_DIR}/eigen)
  ELSE()
    EXECUTE_PROCESS(COMMAND git clone https://gitlab.com/libeigen/eigen.git WORKING_DIRECTORY ${PROJECT_BINARY_DIR})
  ENDIF()
  MESSAGE(STATUS "Using EIGEN3 @ ${PROJECT_BINARY_DIR}/eigen")
  SET(EIGEN3_INCLUDE_DIR ${PROJECT_BINARY_DIR}/eigen)
  FIND_PACKAGE(Eigen3 QUIET REQUIRED)
  INCLUDE_DIRECTORIES(${EIGEN3_INCLUDE_DIR})
ENDIF(EIGEN3_FOUND)

#OPENGL
FIND_PACKAGE(OpenGL QUIET REQUIRED)
LIST(APPEND ALL_LIBRARIES ${OPENGL_LIBRARIES})

#GLFW
SET(GLFW_BUILD_DOCS OFF CACHE BOOL "" FORCE)
SET(GLFW_BUILD_TESTS OFF CACHE BOOL "" FORCE)
SET(GLFW_BUILD_EXAMPLES OFF CACHE BOOL "" FORCE)
ADD_SUBDIRECTORY(${PROJECT_SOURCE_DIR}/extern/glfw)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/extern/glfw)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/extern/glfw/include)
LIST(APPEND ALL_LIBRARIES glfw)

#GLEW-CMAKE
ADD_SUBDIRECTORY(${PROJECT_SOURCE_DIR}/extern/glew-cmake)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/extern/glew-cmake)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/extern/glew-cmake/include)
IF(glew-cmake_BUILD_STATIC)
  LIST(APPEND ALL_LIBRARIES libglew_static)
ELSE()
  LIST(APPEND ALL_LIBRARIES libglew_shared)
ENDIF()

#Box2D
OPTION(USE_BOX2D "Add internal support for Box2D" OFF)
MARK_AS_ADVANCED(USE_BOX2D)
IF(USE_BOX2D)
  FIND_PACKAGE(Box2D QUIET)
  IF(BOX2D_FOUND)
    INCLUDE_DIRECTORIES(${BOX2D_INCLUDE_DIR})
    MESSAGE(STATUS "Found Box2D @ ${BOX2D_INCLUDE_DIR}")
    LIST(APPEND ALL_LIBRARIES ${BOX2D_LIBRARY})
    ADD_DEFINITIONS(-DBOX2D_SUPPORT)
  ELSE(BOX2D_FOUND)
    MESSAGE(WARNING "Cannot find Box2D!")
  ENDIF(BOX2D_FOUND)
ELSE(USE_BOX2D)
  MESSAGE(STATUS "Compile without Box2D!")
ENDIF(USE_BOX2D)

#Bullet
OPTION(USE_BULLET "Add internal support for bullet" OFF)
MARK_AS_ADVANCED(USE_BULLET)
IF(USE_BULLET)
  FIND_PACKAGE(Bullet QUIET)
  IF(Bullet_FOUND)
    INCLUDE_DIRECTORIES(${BULLET_INCLUDE_DIRS})
    MESSAGE(STATUS "Found Bullet @ ${BULLET_INCLUDE_DIRS}")
    LIST(APPEND ALL_LIBRARIES ${BULLET_LIBRARIES})
    ADD_DEFINITIONS(-DBULLET_SUPPORT)
  ELSE(Bullet_FOUND)
    MESSAGE(WARNING "Cannot find Bullet!")
  ENDIF(Bullet_FOUND)
ELSE(USE_BULLET)
  MESSAGE(STATUS "Compile without Bullet!")
ENDIF(USE_BULLET)

#PNG
FIND_PACKAGE(PNG QUIET REQUIRED)
IF(PNG_FOUND)
  INCLUDE_DIRECTORIES(${PNG_INCLUDE_DIRS})
  MESSAGE(STATUS "Found PNG @ ${PNG_INCLUDE_DIRS}")
  LIST(APPEND ALL_LIBRARIES ${PNG_LIBRARIES})
ELSE(PNG_FOUND)
IF(MSVC)
  MESSAGE(SEND_ERROR "Cannot find PNG, please install LIBPNG from https://sourceforge.net/projects/gnuwin32")
ELSE(MSVC)
  MESSAGE(SEND_ERROR "Cannot find PNG!")
ENDIF(MSVC)
ENDIF(PNG_FOUND)